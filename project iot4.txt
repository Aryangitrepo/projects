IOT project
always connect the sensros in sideways

connect ground to ground analog to analog and vcc to 5v
buzzer contains two terminals one posivitve and the otheer ground conneect those first 

#testing if the breadboard works or not 
led test with the arduino nano
//usb mini is used to connect arduino nano to pc devices 
 
byte ledpin = 13;

void setup() {
  pinMode(ledpin, OUTPUT); //led variable declaration to the connected pin number 
}

void loop() {
  digitalWrite(ledpin, HIGH); // Turn LED on used to dynamically change the mode of the leds 
  delay(30);                  // Wait 30 ms
  digitalWrite(ledpin, LOW);  // Turn LED off
  delay(500);                  // Wait 30 ms
}
//working test code for a led test on a arduino wr the led blinks with a delay of 500 milliseconds
#define buzzer 12
void setup()
{
  pinMode(buzzer, OUTPUT);
}

void loop()
{
  bool num=1;
  int n=5,i;
  if(num){
  for(i=0;i<n;i++){
  digitalWrite(buzzer, HIGH);
    delay(500); 
    digitalWrite(buzzer, LOW);
  delay(200); 
  }}
  
}
//a test code to run buzzers this contains a loop that runs the  buzzer for  around n loops 
//it also cotains a boolean condition checker that uses if statement to check if the given condition is satisfied or not 
int sensor = A0;
void setup()
{
 Serial.begin(9600);
 pinMode(3,OUTPUT);
 pinMode(4,OUTPUT);

}
void loop()
{
int sensorvalues = analogRead(sensor);  //taking dynamically read data from a sensor in the system 
if(sensorvalues>=900)//checking if the sensor value is more than the threshold for it to activate
{
  tone(3,1000);
  digitalWrite(4,1);
  delay(200);
  digitalWrite(4,0);
  delay(200);
   }
   else if (sensorvalues>=850)
   {
  digitalWrite(4,1);
  delay(500);
  digitalWrite(4,0);
  delay(500);
  tone(3,800);
   }
   else if (sensorvalues>=750)
   {
  digitalWrite(4,1);
  delay(1000);
  digitalWrite(4,0);
  delay(1000);
    tone(3,500);
   }

  else
   {
   digitalWrite(4,0);
   noTone(3);
   }
  Serial.println(sensorvalues);
}
 // a basic gas sensor based detection system using arduino 
 // Pin assignments
const int fireSensorPin = 2; // Digital pin connected to the fire sensor output
const int ledPin = 3;        // Digital pin connected to the LED
const int buzzerPin = 4;     // Digital pin connected to the buzzer

void setup() {
  // Initialize pins
  pinMode(fireSensorPin, INPUT);
  pinMode(ledPin, OUTPUT);
  pinMode(buzzerPin, OUTPUT);

  // Start serial communication for debugging (optional)
  Serial.begin(9600);
}

void loop() {
  // Read the fire sensor value
  int fireDetected = digitalRead(fireSensorPin);

  if (fireDetected == HIGH) {
    // Fire detected: turn on LED and buzzer
    digitalWrite(ledPin, HIGH);
    digitalWrite(buzzerPin, HIGH);
    Serial.println("Fire detected! Activating alarm.");
  } else {
    // No fire detected: turn off LED and buzzer
    digitalWrite(ledPin, LOW);
    digitalWrite(buzzerPin, LOW);
    Serial.println("No fire detected.");
  }

  // Wait for a short period before checking again
  delay(500);
}
//a code for fire detection on arduino using fire sensor

 final combined code for the project
 
 // Pin assignments
const int ledPin = 13;        // LED test pin
const int buzzer = 12;        // Buzzer test pin
const int gasSensor = A0;     // Analog pin connected to the gas sensor
const int fireSensorPin = 2;  // Digital pin connected to the fire sensor
const int fireLedPin = 3;     // LED for fire detection
const int fireBuzzerPin = 4;  // Buzzer for fire detection

void setup() {
  // Initialize pins
  pinMode(ledPin, OUTPUT);      // LED test
  pinMode(buzzer, OUTPUT);      // Buzzer test
  pinMode(gasSensor, INPUT);    // Gas sensor
  pinMode(fireSensorPin, INPUT); // Fire sensor
  pinMode(fireLedPin, OUTPUT);  // Fire LED
  pinMode(fireBuzzerPin, OUTPUT); // Fire buzzer

  // Start serial communication for debugging
  Serial.begin(9600);
}

void loop() {
  // =======================
  // 1. LED Test
  // =======================
  digitalWrite(ledPin, HIGH); // Turn LED on
  delay(30);                  // Wait 30 ms
  digitalWrite(ledPin, LOW);  // Turn LED off
  delay(500);                 // Blink LED with a 500ms delay

  // =======================
  // 2. Buzzer Test
  // =======================
  bool testCondition = true; // Boolean condition for buzzer test
  int n = 5;                 // Number of buzzer loops
  if (testCondition) {
    for (int i = 0; i < n; i++) {
      digitalWrite(buzzer, HIGH); // Buzzer ON
      delay(500);                 // 500ms ON
      digitalWrite(buzzer, LOW);  // Buzzer OFF
      delay(200);                 // 200ms OFF
    }
  }

  // =======================
  // 3. Gas Sensor Detection
  // =======================
  int gasSensorValue = analogRead(gasSensor); // Read gas sensor value dynamically
  if (gasSensorValue >= 900) { // High threshold
    tone(3, 1000);             // Buzzer frequency 1000Hz
    digitalWrite(4, HIGH);     // Turn LED ON
    delay(200);
    digitalWrite(4, LOW);      // Turn LED OFF
    delay(200);
  } else if (gasSensorValue >= 850) { // Medium threshold
    digitalWrite(4, HIGH);     // Turn LED ON
    delay(500);
    digitalWrite(4, LOW);      // Turn LED OFF
    delay(500);
    tone(3, 800);              // Buzzer frequency 800Hz
  } else if (gasSensorValue >= 750) { // Low threshold
    digitalWrite(4, HIGH);     // Turn LED ON
    delay(1000);
    digitalWrite(4, LOW);      // Turn LED OFF
    delay(1000);
    tone(3, 500);              // Buzzer frequency 500Hz
  } else { // No gas detected
    digitalWrite(4, LOW);      // Turn LED OFF
    noTone(3);                 // Turn buzzer OFF
  }
  Serial.print("Gas Sensor Value: ");
  Serial.println(gasSensorValue);  // Print gas sensor value to serial monitor

  // =======================
  // 4. Fire Sensor Detection
  // =======================
  int fireDetected = digitalRead(fireSensorPin); // Read fire sensor value
  if (fireDetected == HIGH) {
    // Fire detected: turn on LED and buzzer
    digitalWrite(fireLedPin, HIGH);
    digitalWrite(fireBuzzerPin, HIGH);
    Serial.println("Fire detected! Activating alarm.");
  } else {
    // No fire detected: turn off LED and buzzer
    digitalWrite(fireLedPin, LOW);
    digitalWrite(fireBuzzerPin, LOW);
    Serial.println("No fire detected.");
  }

  // Short delay before the next loop iteration
  delay(500);
}
  
  

 
